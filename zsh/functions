# vim: set filetype=sh:

virtualenv_auto_activate() {
  if [ -e ".venv" ]; then
    # Check to see if already activated to avoid redundant activating
    if [ "$VIRTUAL_ENV" != "$(pwd -P)/.venv" ]; then
      echo "Activating virtualenv ..."
      source .venv/bin/activate
    fi
  fi
}

cd () {
  builtin cd $*
  ls
  virtualenv_auto_activate
}


function ck { command mkdir $1 && cd $1 }

function tj {
  tmux attach-session -t `tmux list-sessions | sed -E 's/:.*$//' | fzf`
}

git-current-branch() {
  git rev-parse --abbrev-ref HEAD
}

git-parent-branch() {
  git show-branch -a 2&>/dev/null \
  | ack '\*' \
  | ack -v "$(git-current-branch)" \
  | head -n1 \
  | perl -wnl -e '/\[([^\^\]]*)/ and print $1;'
}

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status -sb
  fi
}

get_suspended_jobs() {
  # thanks to @mheap for his help
  NUM_JOBS="`jobs | wc -l`"
  if test $NUM_JOBS -lt 1 ; then
    echo ""
  else
    echo "("`jobs | gsed -r 's/ .*suspended (\(signal\))?//' | tr -s ' ' | gsed 's/\[\([^]]*\)\]/\1:/g' | gsed 's/\: /\:/g'`")"
  fi
}

# taken from https://github.com/r00k/dotfiles/blob/master/zsh/functions
function git-new-remote-tracking {
  git checkout -b $1 && git push -u origin $1
}

function git-nuke {
  git branch -D $1 && git push origin :$1
}

compdef _git git-nuke=git-checkout

function git_branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git-merge-into {
  branch=`git_branch_name`
  git checkout $1
  git pull origin $1
  git merge $branch
}

function git-merge-branch-into-current {
  branch=`git_branch_name`
  git pull origin $branch
  git checkout $1
  git pull origin $1
  git checkout $branch
  git merge $1
}

function git-checkout-remote-branch {
  git fetch
  git checkout -b $1 "origin/$1"
}

function new-tmux-from-dir-name {
  tmux new-session -As `basename $PWD`
}

function mkv-to-mp4 {
  ffmpeg -i $1 -c:v copy -c:a copy $2
}

function rbenv_prompt_info() {
  local ruby_version
  ruby_version=$(rbenv version 2> /dev/null) || return
  echo "‹$ruby_version" | sed 's/[ \t].*$/›/'
}

function nvm_prompt_info() {
  local node_version
  node_version=$(nvm current 2> /dev/null) || return
  echo "‹$node_version›"
}

function kill_springs() {
  ps -ef | grep spring | grep -v grep | awk '{ print $2 }' | xargs kill
}

function git-set-origin() {
  git remote set-url origin $1
}

function git-set-origin-and-push-master() {
  git remote set-url origin $1 && git push -u origin master
}

function js-highlight() {
  highlight -O rtf $1 --line-numbers -W -j 3 --font-size 40 --font Monaco -W  --syntax js | pbcopy
}

function git-files-in-last-commit() {
  git diff-tree --no-commit-id --name-only -r HEAD
}

